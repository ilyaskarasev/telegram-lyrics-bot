import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from genius_scraper import GeniusScraper
from config import TELEGRAM_BOT_TOKEN
from translate import translate_text

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∫—Ä–∞–ø–µ—Ä–∞
scraper = GeniusScraper()

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    welcome_message = """
üéµ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Lyrics Bot!

–Ø –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ —Ç–µ–∫—Å—Ç –ª—é–±–æ–π –ø–µ—Å–Ω–∏ —Å Genius.com

–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
‚Ä¢ –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ –∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
‚Ä¢ –ù–∞–ø—Ä–∏–º–µ—Ä: "Bohemian Rhapsody Queen" –∏–ª–∏ "Imagine John Lennon"

–ö–æ–º–∞–Ω–¥—ã:
/start - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/help - —Å–ø—Ä–∞–≤–∫–∞
    """
    await update.message.reply_text(welcome_message)

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_message = """
üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞

üîç –ü–æ–∏—Å–∫ —Ç–µ–∫—Å—Ç–∞ –ø–µ—Å–Ω–∏:
–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ –∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –≤ –ª—é–±–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.

–ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:
‚Ä¢ "Bohemian Rhapsody Queen"
‚Ä¢ "Imagine John Lennon"
‚Ä¢ "Yesterday Beatles"
‚Ä¢ "Hotel California Eagles"

‚ö†Ô∏è –í–∞–∂–Ω–æ:
‚Ä¢ –£–∫–∞–∑—ã–≤–∞–π—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ –∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –¥–ª—è –ª—É—á—à–µ–≥–æ –ø–æ–∏—Å–∫–∞
‚Ä¢ –ë–æ—Ç –∏—â–µ—Ç –Ω–∞ —Å–∞–π—Ç–µ Genius.com
‚Ä¢ –ï—Å–ª–∏ –ø–µ—Å–Ω—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å

üîÑ –ï—Å–ª–∏ –±–æ—Ç –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ - —Å–∞–π—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.
    """
    await update.message.reply_text(help_message)

async def search_lyrics(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∏—Å–∫–∞ —Ç–µ–∫—Å—Ç–∞ –ø–µ—Å–Ω–∏"""
    query = update.message.text.strip()
    
    if not query:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ –∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è.")
        return
    
    try:
        # –ò—â–µ–º –ø–µ—Å–Ω—é
        result, error = scraper.search_song(query)
        
        if error:
            await update.message.reply_text(f"‚ùå {error}")
            return
        
        if not result:
            await update.message.reply_text("‚ùå –ü–µ—Å–Ω—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å.")
            return
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        title = result['title']
        lyrics = result['lyrics']
        url = result['url']
        
        # –ü–µ—Ä–µ–≤–æ–¥–∏–º –ø–æ—Å—Ç—Ä–æ—á–Ω–æ
        lines = [line.strip() for line in lyrics.split('\n') if line.strip()]
        translated_lines = []
        for line in lines:
            if line and len(line) > 3:  # –ü–µ—Ä–µ–≤–æ–¥–∏–º —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫–∏ –¥–ª–∏–Ω–Ω–µ–µ 3 —Å–∏–º–≤–æ–ª–æ–≤
                try:
                    ru = translate_text(line)
                    if ru and ru != line:  # –ï—Å–ª–∏ –ø–µ—Ä–µ–≤–æ–¥ —É—Å–ø–µ—à–µ–Ω –∏ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª–∞
                        translated_lines.append(f"{line}\n{ru}")
                    else:
                        translated_lines.append(line)
                except Exception:
                    translated_lines.append(line)
            elif line:
                translated_lines.append(line)
            else:
                translated_lines.append("")
        
        # –°–æ–±–∏—Ä–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        translated_text = '\n\n'.join(translated_lines)
        response_text = f"üéµ {title}\n\n{translated_text}\n\nüîó {url}"
        
        # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ Telegram
        max_length = 4000
        if len(response_text) > max_length:
            # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏
            parts = []
            current_part = f"üéµ {title}\n\n"
            for block in translated_lines:
                if len(current_part + block + '\n\n') > max_length:
                    parts.append(current_part)
                    current_part = block + '\n\n'
                else:
                    current_part += block + '\n\n'
            if current_part:
                parts.append(current_part)
            await update.message.reply_text(parts[0])
            for i, part in enumerate(parts[1:], 1):
                await update.message.reply_text(f"üìÑ –ß–∞—Å—Ç—å {i+1}:\n{part}")
            await update.message.reply_text(f"üîó –ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç: {url}")
        else:
            await update.message.reply_text(response_text)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: {e}")
        await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logger.error(f"–û—à–∏–±–∫–∞: {context.error}")
    if update and update.message:
        await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    if not TELEGRAM_BOT_TOKEN:
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–∫–∞–∑–∞–Ω —Ç–æ–∫–µ–Ω –±–æ—Ç–∞!")
        print("–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –∏ –¥–æ–±–∞–≤—å—Ç–µ TELEGRAM_BOT_TOKEN=your_token_here")
        return
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(TELEGRAM_BOT_TOKEN).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, search_lyrics))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    application.add_error_handler(error_handler)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == '__main__':
    main() 